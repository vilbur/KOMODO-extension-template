{
  "keyboard_shortcut": "", 
  "name": "PrefsTest", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "", 
    "var Prefs\t= ko.extensions.TemplateExtension.Komodo.Prefs;", 
    "", 
    "var pref_data = {", 
    "\t'pref-test-string':\t'bar string', ", 
    "\t'pref-test-integer':\t999999999, ", 
    "\t//'pref-test-float':\t1.1111111, ", 
    "\t//'pref-test-boolean':\ttrue, ", 
    "\t//'pref-test-null':\tnull, ", 
    "\t//'pref-test-empty':\t'',", 
    "\t//'pref-test-object':\t{'string':'string value', 'boolean':true, 'nested-array':['item-1']},", 
    "\t//'pref-test-array':\t['item-1',['subarray item']],", 
    "};", 
    "", 
    "", 
    "/** ", 
    " */", 
    "var prefsPerKeyDefaultValues = function()", 
    "{", 
    "\tPrefs.prefset('pref-test-defaults');", 
    "", 
    "\tfor(var type in pref_data)", 
    "\t\tif (pref_data.hasOwnProperty(type))", 
    "\t\t\tconsole.log( 'Test defaults '+type+': '+(pref_data[type] === Prefs.get(type, pref_data[type] )) );\t\t", 
    "}; ", 
    "", 
    "/** Get pane pref_data", 
    " * @param\tset|get|delete\tmethod", 
    " */", 
    "var prefsPerKeyTest = function(method, prefset='' )", 
    "{", 
    "\tPrefs.prefset(prefset);", 
    "\t", 
    "\tvar prefset_prefix\t= prefset ? prefset+'.' : '';", 
    "\t", 
    "\tfor(var key in pref_data)", 
    "\t\tif (pref_data.hasOwnProperty(key)){", 
    "\t\t\tif( method!=='get' )", 
    "\t\t\t\tPrefs[method]( key, pref_data[key] );", 
    "\t\t\t\t", 
    "\t\t\telse{", 
    "\t\t\t\tvar value\t= Prefs.get( key);", 
    "\t\t\t\t//console.log( 'Test '+key+': '+ value );", 
    "\t\t\t\tconsole.log( 'Test '+prefset_prefix+key+': '+ (value===pref_data[key] || typeof value === typeof pref_data[key]) );", 
    "\t\t\t}", 
    "\t\t}", 
    "};", 
    "", 
    "/** Prefs object test", 
    " * @param\tset|get|delete\tmethod", 
    " */", 
    "var prefsSetObjectTest = function(method, pref_data, prefset='')", 
    "{", 
    "\tPrefs.prefset(prefset);", 
    "", 
    "\t//console.log( pref_data );", 
    "\tvar result = Prefs[method](pref_data);", 
    "\t", 
    "\tif( method!=='get' )", 
    "\t\treturn; ", 
    "\t\t", 
    "\t//console.log( 'prefsSetObjectTest()' );", 
    "\t//console.log( result );", 
    "\tconsole.log( 'prefsSetObjectTest()', result );", 
    "};", 
    "/** Prefs by prefset", 
    " * @param\tset|get|delete\tmethod", 
    " */", 
    "var prefsByPrefixTest = function(method)", 
    "{", 
    "\tvar result = Prefs.prefset('pref-test')[method]();", 
    "\t\t", 
    "\tif( method!=='get' )", 
    "\t\treturn; ", 
    "\t\t", 
    "\tconsole.log( 'prefsByPrefixTest() return:' );", 
    "\tconsole.log( result );", 
    "};", 
    "/** Delete prefset", 
    " */", 
    "var deletePrefset = function(prefset)", 
    "{", 
    "\tPrefs.delete(prefset);", 
    "}; ", 
    "", 
    "/*---------------------------------------", 
    "\tRUN TEST", 
    "\t", 
    " !!! Get values from Prefs works after restart of Komodo after first setting", 
    "\t", 
    "-----------------------------------------*/", 
    "", 
    "/* ========= GLOBAL ========= */", 
    "", 
    "/** Global Prefs by single key ", 
    " */", 
    "//prefsPerKeyDefaultValues();", 
    "//prefsPerKeyTest('set');", 
    "//prefsPerKeyTest('get');", 
    "//prefsPerKeyTest('delete');", 
    "", 
    "", 
    "/** Global Prefs by object ", 
    " */", 
    "//prefsSetObjectTest('set',\tpref_data);\t// set by object", 
    "//prefsSetObjectTest('get',\tpref_data);\t// get by object with defaults", 
    "//prefsSetObjectTest('delete',\tpref_data);\t// delete by object keys", 
    "", 
    "", 
    "/** Prefs by array ", 
    " */", 
    "//prefsSetObjectTest('get',\tObject.keys(pref_data));\t// get by array of keys", 
    "//prefsSetObjectTest('delete',\tObject.keys(pref_data));\t// delete by array of keys", 
    "", 
    "", 
    "/** Prefs by prefset ", 
    " */", 
    "//prefsByPrefixTest('get');", 
    "//prefsByPrefixTest('delete');", 
    "", 
    "", 
    "/* ========= PREFSET ========= */", 
    "", 
    "/** Prefset Prefs by single key ", 
    " */", 
    "//prefsPerKeyDefaultValues();", 
    "//prefsPerKeyTest('set',\t'prefset-test');", 
    "//prefsPerKeyTest('get',\t'prefset-test');", 
    "//prefsPerKeyTest('delete',\t'prefset-test');", 
    "", 
    "//deletePrefset('prefset-test');", 
    "", 
    "/** Prefset all values", 
    " */", 
    "console.log( Prefs.prefset('prefset-test').get() );", 
    "", 
    "/** Prefset Prefs by object ", 
    " */", 
    "//prefsSetObjectTest('set',\tpref_data,\t'prefset-test');\t// set by object", 
    "//prefsSetObjectTest('get',\tpref_data,\t'prefset-test');\t// get by object with defaults", 
    "//prefsSetObjectTest('delete',\tpref_data,\t'prefset-test');\t// delete by object keys", 
    "", 
    ""
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}