{
  "keyboard_shortcut": "", 
  "name": "Node", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/** Node", 
    "*/", 
    "ko.extensions.TemplateExtension.Komodo.Node = (function()", 
    "{", 
    "\t\t", 
    "\tfunction Node()", 
    "\t{", 
    "\t\tvar $\t= require('ko/dom');", 
    "\t\tvar type\t= '';", 
    "\t\tvar node\t= null;\t\t", 
    "\t\t", 
    "\t\t/** Set type of node", 
    "\t\t * @param\tstring\t_type\tType of node", 
    "\t\t * @return\tself", 
    "\t\t */", 
    "\t\tthis.type = function(_type)", 
    "\t\t{", 
    "\t\t\ttype = _type;", 
    "\t\t\t", 
    "\t\t\tnode = document.createElement(type);\t\t\t\t\t\t", 
    "", 
    "\t\t\treturn this;", 
    "\t\t}; ", 
    "\t\t/** Set attributes of node", 
    "\t\t * @param\tobject|string\tattributes\tObject of attributes for element, STRING is treated as label", 
    "\t\t *", 
    "\t\t * @return\tself ", 
    "\t\t */", 
    "\t\tthis.attributes = function(attributes)", 
    "\t\t{", 
    "\t\t\tif( ! attributes )", 
    "\t\t\t\treturn this; ", 
    "\t\t\t", 
    "\t\t\tif( typeof attributes === 'string' )", 
    "\t\t\t\tattributes = {label: attributes};\t", 
    "\t\t\t", 
    "\t\t\tfor(var attribute in attributes)", 
    "\t\t\t\tif (attributes.hasOwnProperty(attribute))", 
    "\t\t\t\t\tsetAttribute( attribute, attributes[attribute] );\t\t\t\t\t", 
    "\t\t\t\t\t//node.setAttribute( attribute, attributes[attribute] );", 
    "\t\t", 
    "\t\t\tsetDefaultId();", 
    "", 
    "\t\t\treturn this;  ", 
    "\t\t};", 
    "\t\t/** Set attribute", 
    "\t\t */", 
    "\t\tvar setAttribute = function(attribute, value)", 
    "\t\t{", 
    "\t\t\t/** Sanitize attribute", 
    "\t\t\t */", 
    "\t\t\tvar sanitized_attribute = (function()", 
    "\t\t\t{", 
    "\t\t\t\tif( type=='checkbox' && attribute=='value' )", 
    "\t\t\t\t\tattribute = 'checked';", 
    "\t\t\t\t", 
    "\t\t\t\tif( attribute=='tooltip' )", 
    "\t\t\t\t\tattribute = 'tooltiptext';", 
    "\t\t\t\t\t", 
    "\t\t\t\treturn attribute;", 
    "\t\t\t})(); ", 
    "\t\t\t", 
    "\t\t\tnode.setAttribute( sanitized_attribute, value );", 
    "\t\t}; ", 
    "\t\t/** Set default Id by sanitized label if not id defined", 
    "\t\t */", 
    "\t\tvar setDefaultId = function()", 
    "\t\t{", 
    "\t\t\t/** Is auto id control", 
    "\t\t\t */", 
    "\t\t\tvar is_auto_id_control = ['button'].indexOf( node.nodeName ) === -1;", 
    "\t\t\t", 
    "\t\t\tif( ! is_auto_id_control )", 
    "\t\t\t\treturn; ", 
    "\t\t\t", 
    "\t\t\t/** Get sanitized id", 
    "\t\t\t */", 
    "\t\t\tvar sanitizeId = function(id)", 
    "\t\t\t{", 
    "\t\t\t\treturn id.replace(/[^a-z0-9\\s-_]/gi, '').replace(/\\s+/gi, '_').trim().toLowerCase();", 
    "\t\t\t};", 
    "", 
    "\t\t\tvar id\t= node.hasAttribute('id') ?  node.getAttribute('id') :  node.getAttribute('label');", 
    "\t\t\t", 
    "\t\t\tnode.setAttribute( 'id', sanitizeId(id) );", 
    "\t\t}; ", 
    "\t\t", 
    "\t\t/** get", 
    "\t\t */", 
    "\t\tthis.get = function()", 
    "\t\t{", 
    "\t\t\t//console.log( node );", 
    "\t\t\treturn node;", 
    "\t\t}; ", 
    "\t\t/** test", 
    "\t\t */ ", 
    "\t\tthis.test = function()", 
    "\t\t{", 
    "\t\t\talert( 'TemplateExtension.Node.test()' ); ", 
    "\t\t}; ", 
    "\t}", 
    "\treturn Node;", 
    "", 
    "})();", 
    "", 
    ""
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}