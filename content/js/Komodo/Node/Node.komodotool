{"keyboard_shortcut":"","name":"Node","language":"JavaScript","trigger_enabled":false,"value":["/** Node\r","*/\r","ko.extensions.TemplateExtension.Komodo.Node = (function()\r","{\r","\t\t\r","\tfunction Node()\r","\t{\r","\t\tvar $\t= require('ko/dom');\r","\t\tvar node\t= null;\r","\t\t\r","\t\t/** Set type of node\r","\t\t * @param\tstring\ttype\tType of node\r","\t\t * @return\tself\r","\t\t */\r","\t\tthis.type = function(type)\r","\t\t{\r","\t\t\tnode = document.createElement(type);\t\t\t\t\t\t\r","\r","\t\t\treturn this;\r","\t\t}; \r","\t\t/** Set attributes of node\r","\t\t * @param\tobject|string\tattributes\tObject of attributes for element, STRING is treated as label\r","\t\t *\r","\t\t * @return\tself \r","\t\t */\r","\t\tthis.attributes = function(attributes)\r","\t\t{\r","\t\t\tif( ! attributes )\r","\t\t\t\treturn this; \r","\t\t\t\r","\t\t\tif( typeof attributes === 'string' )\r","\t\t\t\tattributes = {label: attributes};\t\r","\t\t\t\r","\t\t\tfor(var attribute in attributes)\r","\t\t\t\tif (attributes.hasOwnProperty(attribute))\r","\t\t\t\t\tnode.setAttribute( attribute, attributes[attribute] );\r","\t\t\r","\t\t\tsetDefaultId();\r","\r","\t\t\treturn this;  \r","\t\t};\r","\t\t/** Set default Id by sanitized label if not id defined\r","\t\t */\r","\t\tvar setDefaultId = function()\r","\t\t{\r","\t\t\t/** Get Label\r","\t\t\t */\r","\t\t\tvar getLabel = function()\r","\t\t\t{\r","\t\t\t\treturn node.getAttribute('label').replace(/[\\s-]/gi, '_').toLowerCase();\r","\t\t\t};\r","\t\t\t\r","\t\t\tif( ! node.hasAttribute('id') )\r","\t\t\t\tnode.setAttribute( 'id', getLabel() );\r","\t\t}; \r","\t\t\r","\t\t\r","\t\t/** get\r","\t\t */\r","\t\tthis.get = function()\r","\t\t{\r","\t\t\t//console.log( node );\r","\t\t\treturn node;\r","\t\t}; \r","\t\t/** test\r","\t\t */ \r","\t\tthis.test = function()\r","\t\t{\r","\t\t\talert( 'TemplateExtension.Node.test()' ); \r","\t\t}; \r","\t}\r","\treturn Node;\r","\r","})();"],"version":"1.0.12","rank":100,"async":false,"type":"macro","trigger":"trigger_postopen"}