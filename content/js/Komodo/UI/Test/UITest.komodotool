{
  "keyboard_shortcut": "", 
  "name": "UITest", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/** Test controls in pane", 
    " *", 
    " */", 
    "ko.extensions.TemplateExtension.UITest = {};", 
    "(function()", 
    "{", 
    "\tfunction UITest()", 
    "\t{", 
    "\t\tvar paneUI\t= null;", 
    "\t\t/*---------------------------------------", 
    "\t\t\tPREPARE TEST CLASS AND PANE UI", 
    "\t\t-----------------------------------------", 
    "\t\t*/", 
    "\t\t/** Pane ui", 
    "\t\t * @return\tobject\tUI class in pane", 
    "\t\t */", 
    "\t\tvar setPaneUI = function()", 
    "\t\t{", 
    "\t\t\tvar document_pane\t= ko.extensions.TemplateExtension.Komodo.Document.get('pane');", 
    "\t\t\t", 
    "\t\t\tpaneUI = new ko.extensions.TemplateExtension.Komodo.UI().document(document_pane);", 
    "\t\t\t", 
    "\t\t\treturn paneUI;", 
    "\t\t};", 
    "\t\t/**  ", 
    "\t\t */", 
    "\t\tvar addExtensionTestControls = function()", 
    "\t\t{", 
    "\t\t\tcreateVbox('extension_test_controls', 'Extension test controls');", 
    "", 
    "\t\t\tpaneUI.append( '#extension_test_controls', [", 
    "\t\t\t\t//paneUI.create('caption', {label: 'Extension test controls'}),", 
    "\t\t\t\tpaneUI.create('button',\t{label:\t'TemplateExtension.test()', oncommand: 'TemplateExtension().test()'}),", 
    "\t\t\t\tpaneUI.create('button',\t{label:\t'Komodo.Pane.test()',       oncommand: 'TemplateExtension().Komodo.Pane.test()', tooltip: 'TemplateExtension.Komodo.Pane.test()'}),\t\t\t\t\t   ", 
    "\t\t\t\tpaneUI.create('button',\t{label:\t'UITest().createPrefSetTest()', oncommand: 'UITest().createPrefSetTest()'}),", 
    "\t\t\t\t//paneUI.create('button',\t{label:\t'UITest().test()', oncommand: 'UITest().test()'}),\t\t\t\t", 
    "\t\t\t]);", 
    "\t\t};", 
    "\t\t/** Clear pane", 
    "\t\t */", 
    "\t\tvar clearPane = function()", 
    "\t\t{", 
    "\t\t\tpaneUI.$( '#TemplateExtension-pane' ).empty();", 
    "\t\t\tpaneUI.append( '#TemplateExtension-pane', [", 
    "\t\t\t\tpaneUI.create('hbox'),", 
    "\t\t\t]);", 
    "\t\t}; ", 
    "\t\t/** Create vbox", 
    "\t\t */", 
    "\t\tvar createVbox = function(id, caption)", 
    "\t\t{", 
    "", 
    "\t\t\t//consoleClear(); //!!!!!", 
    "\t\t\tpaneUI.$( '#'+id ).empty();", 
    "\t\t\t\t", 
    "\t\t\tif( ! paneUI.exists('#'+id) )", 
    "\t\t\t\tpaneUI.append( '#TemplateExtension-pane > hbox', [", 
    "\t\t\t\t\t//paneUI.create('vbox', {id: id }),", 
    "\t\t\t\t\t//paneUI.create('caption', {label: caption}),", 
    "\t\t\t\t\tpaneUI.create('vbox', {id: id, style:\"border:1px solid lightblue\" },[ 'caption', {label: caption} ]),", 
    "\t\t\t\t]);", 
    "\t\t\t\t", 
    "\t\t", 
    "\t\t}; ", 
    "\t\t/**  ", 
    "\t\t */", 
    "\t\tvar addUiTestControls = function()", 
    "\t\t{", 
    "\t\t\tcreateVbox('ui_test_controls', 'UI test controls');", 
    "\t\t\t", 
    "\t\t\tpaneUI.append( '#ui_test_controls', [", 
    "\t\t\t\tpaneUI.create('button',\t{label:\t'Add Controls', oncommand: 'UITest().addControlsTest()'}),\t\t\t\t", 
    "\t\t\t\tpaneUI.create('button',\t{label:\t'UITest().test', oncommand: 'UITest().test'}),\t\t\t", 
    "\t\t\t]);", 
    "\t\t", 
    "\t\t};", 
    "\t\t/** Add test parent element", 
    "\t\t *  MUST BE EXECUTED BEFORE TEST", 
    "\t\t */", 
    "\t\tvar addTestControlsBoxElement = function()", 
    "\t\t{", 
    "\t\t\tcreateVbox('controls_box', 'Test controls box');", 
    "\t\t\t//if( ! paneUI.exists('#controls_box') )", 
    "\t\t\t//\tpaneUI.append( '#TemplateExtension-pane > hbox',\tpaneUI.create('vbox',\t{id:\t'controls_box'}) );", 
    "\t\t\t//\t", 
    "\t\t\t//paneUI.append( '#controls_box', [", 
    "\t\t\t//\tpaneUI.create('caption',\t{label:\t'Test controls box'}),", 
    "\t\t\t//]);", 
    "\t\t};", 
    "", 
    "\t\t/** Clear Komodo Console pane", 
    "\t\t *  IF CONSOLE IS NOT DETACHED", 
    "\t\t */", 
    "\t\tvar consoleClear = function(clear_message='UITest')", 
    "\t\t{", 
    "\t\t\tvar consoleEL = document.getElementById('console-widget');", 
    "\t\t\tif(consoleEL)", 
    "\t\t\t{", 
    "\t\t\t\tconsoleEL.contentWindow.document.getElementById('output').innerHTML = '';", 
    "\t\t\t\tif(clear_message)", 
    "\t\t\t\t\trequire('ko/console').info(clear_message);\t", 
    "\t\t\t}", 
    "\t\t};", 
    "\t\t/** Remove controls", 
    "\t\t *  MUST BE EXECUTED BEFORE TEST", 
    "\t\t */", 
    "\t\tvar removeControls = function()", 
    "\t\t{", 
    "\t\t\tpaneUI.$( '#extension_test_controls' ).empty();", 
    "\t\t\tpaneUI.$( '#ui_test_controls' ).empty();\t\t\t", 
    "\t\t};", 
    "\t\t/** init", 
    "\t\t */", 
    "\t\tthis.init = function()", 
    "\t\t{", 
    "\t\t\t//alert( 'init' ); ", 
    "\t\t\tconsoleClear();", 
    "\t\t\t", 
    "\t\t\tsetPaneUI();", 
    "\t\t\t", 
    "\t\t\tclearPane();\t\t\t", 
    "\t\t\t//removeControls();", 
    "\t\t\t//refreshPane();", 
    "\t\t\taddExtensionTestControls();", 
    "\t\t\t//addUiTestControls();", 
    "\t\t};", 
    "\t\t/** Refresh pane", 
    "\t\t */", 
    "\t\tvar refreshPane = function()", 
    "\t\t{", 
    "\t\t\tpaneUI.$( '#controls_box' ).empty();", 
    "\t\t\taddTestControlsBoxElement();", 
    "\t\t};", 
    "\t\t/*---------------------------------------", 
    "\t\t\tTESTS", 
    "\t\t-----------------------------------------", 
    "\t\t*/", 
    "\t\tthis.ControlsExistsTest = function()", 
    "\t\t{", 
    "\t\t\tvar control\t= paneUI.create('caption',\t{label:\t'ControlsExistsTest'});", 
    "\t\t\t", 
    "\t\t\tconsole.log( control );", 
    "\t\t\tpaneUI.append( '#this_should_not_exists',\tcontrol );", 
    "\t\t\tpaneUI.append( '#controls_box',\tcontrol );\t", 
    "\t\t};", 
    "\t\t/** Add controls", 
    "\t\t */", 
    "\t\tthis.addControlsTest = function()", 
    "\t\t{", 
    "\t\t\t//paneUI.append('#controls_box', paneUI.create('textbox') );", 
    "\t\t\trefreshPane();", 
    "\t\t\t", 
    "\t\t\tpaneUI.append('#controls_box',", 
    "\t\t\t\tpaneUI.create('checkbox', [", 
    "\t\t\t\t\t{label: 'Checkbox 1', prefs:false, value:true},", 
    "\t\t\t\t\t{label: 'Checkbox 2', prefs:false},", 
    "\t\t\t\t])", 
    "\t\t\t)", 
    "\t\t\t.append('#controls_box',", 
    "\t\t\t\tpaneUI.create('checkbox', [", 
    "\t\t\t\t\t{label: 'Checkbox prefs 1', checked:true},", 
    "\t\t\t\t\t{label: 'Checkbox prefs 2', prefs:true},", 
    "\t\t\t\t])", 
    "\t\t\t);", 
    "\t\t};", 
    "\t\t", 
    "\t\t/** Create pref set", 
    "\t\t */", 
    "\t\tthis.createPrefSetTest = function()", 
    "\t\t{", 
    "\t\t\tcreateVbox('ui_test_prefset', 'Prefset test');", 
    "\t\t\t", 
    "\t\t\tvar template = {groupbox: ['checkbox', 'textbox']};", 
    "\t\t\tvar values   = {  ", 
    "\t\t\t\t\t\t\t\t'Container A':{  ", 
    "\t\t\t\t\t\t\t\t\t'Control A':    false,  ", 
    "\t\t\t\t\t\t\t\t\t'Enter Text A':   'Foo Text A',  ", 
    "\t\t\t\t\t\t\t\t},  ", 
    "\t\t\t\t\t\t\t\t'Container B':{  ", 
    "\t\t\t\t\t\t\t\t\t'Control B':    true,  ", 
    "\t\t\t\t\t\t\t\t\t'Enter Text B':   '',  ", 
    "\t\t\t\t\t\t\t\t}  ", 
    "\t\t\t\t\t\t\t};  ", 
    "\t\t", 
    "\t\t\tpaneUI.createPrefSet('#ui_test_prefset', template, values );", 
    "\t\t}; ", 
    "", 
    "\t\t/** Get values", 
    "\t\t */", 
    "\t\tthis.getAllValuesTest = function()", 
    "\t\t{", 
    "\t\t\tconsole.log('getAllValuesTest'); ", 
    "\t\t\tconsole.log( paneUI.values( '#controls_box') );\t", 
    "\t\t}; ", 
    "\t\t/** Get prefs values", 
    "\t\t */", 
    "\t\tthis.getPrefsValuesTest = function()", 
    "\t\t{", 
    "\t\t\tconsole.log('getPrefsValuesTest'); ", 
    "\t\t\tconsole.log( paneUI.values( '#controls_box', 'prefs' ) );", 
    "\t\t};", 
    "\t\t", 
    "\t\t/** test", 
    "\t\t */ ", 
    "\t\tthis.test = function()", 
    "\t\t{", 
    "\t\t\talert( 'UITest.test()' ); ", 
    "\t\t}; ", 
    "\t\t", 
    "\t}", 
    "\treturn UITest;", 
    "", 
    "})().apply(ko.extensions.TemplateExtension.UITest);", 
    "", 
    "", 
    "function UITest()", 
    "{", 
    "\treturn ko.extensions.TemplateExtension.UITest;", 
    "}", 
    "", 
    "setTimeout( function(){", 
    "\tko.extensions.TemplateExtension.UITest.init();", 
    "}, 1000); "
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}