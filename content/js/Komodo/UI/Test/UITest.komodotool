{
  "keyboard_shortcut": "", 
  "name": "UITest", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/* Test controls in pane", 
    " *", 
    " */", 
    "", 
    "/*---------------------------------------", 
    "\tHELPERS", 
    "-----------------------------------------", 
    "*/", 
    "/** Pane ui", 
    " * @return\tobject\tUI class in pane", 
    " */", 
    "paneUI = (function()", 
    "{", 
    "\t", 
    "\tvar document_pane\t= ko.extensions.TemplateExtension.Komodo.Document.get('pane');", 
    "\t", 
    "\treturn new ko.extensions.TemplateExtension.Komodo.UI().document(document_pane);", 
    "})();", 
    "/** Clear Komodo Console pane", 
    " *  IF CONSOLE IS NOT DETACHED", 
    " */", 
    "function consoleClear(clear_message) {", 
    "", 
    "\tvar consoleEL = document.getElementById('console-widget');", 
    "\tif(consoleEL){", 
    "\t\t", 
    "\t\tconsoleEL.contentWindow.document.getElementById('output').innerHTML = '';", 
    "\t\tif(clear_message)", 
    "\t\t\trequire('ko/console').info(clear_message);\t", 
    "\t}", 
    "}", 
    "/**  ", 
    " *\t", 
    " */", 
    "function addTestControls()", 
    "{", 
    "\tif( ! paneUI.exists('#te_test_controls') )", 
    "\t\tpaneUI.append( '#TemplateExtension-pane > hbox',\tpaneUI.create('vbox',\t{id:\t'te_test_controls'}) );", 
    "", 
    "\tpaneUI.append( '#te_test_controls', [", 
    "\t\tpaneUI.create('button',\t{label:\t'TemplateExtension.test()', oncommand: 'TemplateExtension().test()'}),", 
    "\t\tpaneUI.create('button',\t{label:\t'Komodo.Pane.test()',       oncommand: 'TemplateExtension().Komodo.Pane.test()', tooltip: 'TemplateExtension.Komodo.Pane.test()'}),\t\t\t\t\t   ", 
    "\t\tpaneUI.create('button',\t{label:\t'Get values', oncommand: 'console.log(TemplateExtension().Komodo.Pane.UI.values(\"#TemplateExtension-pane\"))'}),\t\t\t\t\t   ", 
    "\t]);\t\t\t\t", 
    "", 
    "} ", 
    "/** Add test parent element", 
    " *  MUST BE EXECUTED BEFORE TEST", 
    " */", 
    "function addTestParentElement()", 
    "{", 
    "\tif( ! paneUI.exists('#te_controls_box') )", 
    "\t\tpaneUI.append( '#TemplateExtension-pane > hbox',\tpaneUI.create('hbox',\t{id:\t'te_controls_box'}) );\t", 
    "} ", 
    "/** Remove controls", 
    " *  MUST BE EXECUTED BEFORE TEST", 
    " */", 
    "function removeControls()", 
    "{", 
    "\tpaneUI.$( '#te_test_controls' ).empty();", 
    "\tpaneUI.$( '#te_controls_box' ).empty();\t", 
    "}", 
    "", 
    "/*---------------------------------------", 
    "\tTESTS", 
    "-----------------------------------------", 
    "*/", 
    "function ControlsExistsTest()", 
    "{", 
    "\tvar control\t= paneUI.create('caption',\t{label:\t'ControlsExistsTest'});", 
    "\tvar control2\t= paneUI.create('caption',\t{label:\t'ControlsExistsTest 2'});\t", 
    "\tconsole.log( control );", 
    "\tpaneUI.append( '#this_should_not_exists', control );", 
    "\tpaneUI.append( '#te_controls_box', control );\t", 
    "\tpaneUI.append( '#te_controls_box', control );\t", 
    "\t", 
    "}", 
    "/** Add controls", 
    " */", 
    "function addControlsTest()", 
    "{\t", 
    "\t//paneUI.append('#te_controls_box', paneUI.create('textbox') );", 
    "", 
    "\tpaneUI.append('#te_controls_box',", 
    "\t\tpaneUI.create('checkbox', [", 
    "\t\t\t{label: 'Checkbox 1', prefs:false, value:true},", 
    "\t\t\t{label: 'Checkbox 2', prefs:false},", 
    "\t\t])", 
    "\t)", 
    "\t.append('#te_controls_box',", 
    "\t\tpaneUI.create('checkbox', [", 
    "\t\t\t{label: 'Checkbox prefs 1', checked:true},", 
    "\t\t\t{label: 'Checkbox prefs 2', prefs:true},", 
    "\t\t])", 
    "\t);", 
    "}", 
    "", 
    "/** Create pref set", 
    " */", 
    "function createPrefSetTest()", 
    "{", 
    "\t/** Create prefset wrapper element", 
    "\t */", 
    "\tvar createPrefsetParentElements = (function()", 
    "\t{", 
    "\t\tpaneUI.append( '#te_controls_box',\tpaneUI.create('vbox',\t{id:\t'pref_set_test'}) );", 
    "\t\tpaneUI.append( '#pref_set_test',\tpaneUI.create('caption',\t{label:\t'Prefset test caption'}) );", 
    "\t})(); ", 
    "\t", 
    "\tvar template = {groupbox: ['checkbox', 'textbox']};", 
    "    var values   = {  ", 
    "                        'Container A':{  ", 
    "                            'Control A':    false,  ", 
    "                            'Enter Text A':   'Foo Text A',  ", 
    "                        },  ", 
    "                        'Container B':{  ", 
    "                            'Control B':    true,  ", 
    "                            'Enter Text B':   '',  ", 
    "                        }  ", 
    "                    };  ", 
    "", 
    "\tpaneUI.createPrefSet('#pref_set_test', template, values );", 
    "} ", 
    "", 
    "", 
    "", 
    "/** Get values", 
    " */", 
    "function getAllValuesTest()", 
    "{", 
    "\tconsole.log('getAllValuesTest'); ", 
    "\tconsole.log( paneUI.values( '#te_controls_box') );\t", 
    "} ", 
    "/** Get prefs values", 
    " */", 
    "function getPrefsValuesTest()", 
    "{", 
    "\tconsole.log('getPrefsValuesTest'); ", 
    "\tconsole.log( paneUI.values( '#te_controls_box', 'prefs' ) );", 
    "} ", 
    "/*---------------------------------------", 
    "\tRUN TESTS", 
    "-----------------------------------------", 
    "*/", 
    "/* PERENT MUST BE ADDED AND CLEARED BEFORE ANY TEST */", 
    "consoleClear('UITest');", 
    "removeControls();", 
    "addTestControls();", 
    "//addTestParentElement();", 
    "", 
    "/* OTHER TEST */", 
    "//ControlsExistsTest();", 
    "//addControlsTest();", 
    "//createPrefSetTest();", 
    "", 
    "//getAllValuesTest();", 
    "//getPrefsValuesTest();", 
    "", 
    "", 
    "", 
    "", 
    "", 
    ""
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}