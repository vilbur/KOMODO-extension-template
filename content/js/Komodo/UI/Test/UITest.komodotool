{"keyboard_shortcut":"","name":"UITest","language":"JavaScript","trigger_enabled":false,"value":["/** Test controls in pane\r"," *\r"," * Steps how to init in UI in documentation of method 'UITest.init()'\r"," *\r"," * Methods with suffix '_btn' became buttons in UI.\tMethods with same prefix belongs to same section <box>\r"," * Methods with suffix '_dd'  became Items in dropdoen menu.\tMethods with same prefix belongs to same dropdown menu\r"," *\r"," */\r","ko.extensions.TemplateExtension.UITest = {};\r","(function()\r","{\r","\tfunction UITest()\r","\t{\r","\t\tvar $\t= require('ko/dom');\r","\t\tvar self\t= this;\r","\t\t\r","\t\tvar prefs\t= ko.extensions.TemplateExtension.Komodo.Prefs.prefset('ui-test');\r","\t\tvar paneUI\t= null;\r","\t\t\r","\t\t/** Test box selectors\r","\t\t */\t\t\t\t\r","\t\tvar controls_box_id\t= 'generated_examples';\r","\t\tvar main_element\t= '';\t// E.G.: '#TemplateExtension-preferences'\r","\t\tvar controls_box\t= ''; // final selector of test box element E.G.: '#TemplateExtension-preferences #generated_example'\r","\r","\t\t/*---------------------------------------\r","\t\t\tUITest TEST CONTROLS\r","\t\t-----------------------------------------\r","\t\t*/\r","\t\t/** Test controls init pane\r","\t\t */\r","\t\tthis.InitUiTest_UiTest_btn = function()\r","\t\t{\r","\t\t\tconsole.log( 'InitUiTest_UiTest_btn' );  \r","\t\t\tinitControlTestBox();\r","\t\t\t//this.init();\r","\t\t\tAddUiTestButtons();\r","\t\t\t\r","\t\t\t/* INIT TESTS */\r","\t\t\tthis.AddMainControls_ControlTest_dd();\r","\t\t};\r","\t\t/** Test controls init pane\r","\t\t */\r","\t\tthis.ClearConsole_UiTest_btn = function(clear_message='')\r","\t\t{\r","\t\t\tvar consoleEL = ko.windowManager.getMainWindow().document.getElementById('console-widget');\r","\t\t\tif(consoleEL)\r","\t\t\t{\r","\t\t\t\tconsoleEL.contentWindow.document.getElementById('output').innerHTML = '';\r","\t\t\t\tif(clear_message)\r","\t\t\t\t\trequire('ko/console').info(clear_message);\t\r","\t\t\t}\r","\t\t};\r","\t\t\r","\t\t/*---------------------------------------\r","\t\t\tCONTROL TESTS\r","\t\t-----------------------------------------\r","\t\t*/\r","\t\t/** Add controls\r","\t\t */\r","\t\tthis.AddMainControls_ControlTest_dd = function()\r","\t\t{\r","\t\t\t//paneUI.append('#controls_box', paneUI.create('textbox') );\r","\t\t\tcreateVbox('main_controls', 'Main controls');\r","\t\t\t\r","\t\t\tpaneUI.append('#main_controls',\r","\t\t\t\tpaneUI.create('textbox', {id: 'pref-test-string', value:'lorem ipsum'})\r","\t\t\t)\r","\t\t\t.append('#main_controls',\r","\t\t\t\tpaneUI.create('checkbox', [\r","\t\t\t\t\t{label: 'Checkbox 1', prefs:false, value:true},\t\t\t\t\t\r","\t\t\t\t\t{label: 'Checkbox 2', prefs:false},\r","\t\t\t\t])\r","\t\t\t)\r","\t\t\t.append('#main_controls',\r","\t\t\t\tpaneUI.create('checkbox', [\r","\t\t\t\t\t{label: 'Checkbox prefs 1', checked:true},\r","\t\t\t\t\t{label: 'Checkbox prefs 2', prefs:true},\r","\t\t\t\t])\r","\t\t\t);\r","\t\t};\r","\t\t\r","\t\t/** Create controlset\r","\t\t */\r","\t\tthis.CreateControlset_ControlTest_dd = function()\r","\t\t{\r","\t\t\tcreateVbox('ui_test_controlset_wrapper','', {caption: \"Prefset test\", template: '[\"checkbox\", \"textbox\"]'});\r","\t\t\t\r","\t\t\t//var perfset_template = {'Prefset test': ['checkbox', 'textbox']};\r","\t\t\tvar perfset_values   = {  \r","\t\t\t\t\t\t\t\t\t'Container A':{  \r","\t\t\t\t\t\t\t\t\t\t'Control A':    false,  \r","\t\t\t\t\t\t\t\t\t\t'Enter Text A': 'Foo Text A',  \r","\t\t\t\t\t\t\t\t\t},  \r","\t\t\t\t\t\t\t\t\t'Container B':{  \r","\t\t\t\t\t\t\t\t\t\t'Control B':    true,  \r","\t\t\t\t\t\t\t\t\t\t'Enter Text B': '',  \r","\t\t\t\t\t\t\t\t\t}\r","\t\t\t\t\t\t\t\t};\r","\t\t\t\r","\t\t\tpaneUI.controlset('#ui_test_controlset_wrapper', perfset_values );\r","\t\t};\r","\t\t/** Create controlset\r","\t\t */\r","\t\tthis.LoadControlsetByMarkup_ControlTest_dd = function()\r","\t\t{\r","\t\t\tcreateVbox('ui_test_controlset_wrapper');\r","\t\t\t\r","\t\t\tvar perfset_values   = {  \r","\t\t\t\t\t\t\t\t\t'Container A':{  \r","\t\t\t\t\t\t\t\t\t\t'Control A':    false,  \r","\t\t\t\t\t\t\t\t\t\t'Enter Text A': 'Foo Text A',  \r","\t\t\t\t\t\t\t\t\t},  \r","\t\t\t\t\t\t\t\t\t'Container B':{  \r","\t\t\t\t\t\t\t\t\t\t'Control B':    true,  \r","\t\t\t\t\t\t\t\t\t\t'Enter Text B': '',  \r","\t\t\t\t\t\t\t\t\t}\r","\t\t\t\t\t\t\t\t};\r","\t\t\t\r","\t\t\tpaneUI.controlset('#ui_test_controlset_wrapper', perfset_values );\r","\t\t};\r","\t\t/** Create pref set\r","\t\t */\r","\t\tthis.CreateDopdown_ControlTest_dd = function()\r","\t\t{\r","\t\t\tcreateVbox('ui_test_dropdown','Dropdown');\r","\t\t\t\r","\t\t\tpaneUI.append('#ui_test_dropdown',\r","\t\t\t\tpaneUI.dropdown('#dropdown_test',\t{'Item A':'alert(\"A\")','Item B':'alert(\"B\")'})\r","\t\t\t);\r","\t\t\t\r","\t\t\tpaneUI.append('#ui_test_dropdown',\r","\t\t\t\tpaneUI.dropdown('#dropdown_text_test', {'Item A':{tooltip: 'Item A'},'Item B':{tooltip: 'Item B'}}, 'Attributes & label')\r","\t\t\t);\r","\t\t};\r","\t\t/** Try add control to element which not exist\r","\t\t * It throws error\r","\t\t *\t\r","\t\t */\r","\t\tthis.AddExistingControls_ControlTest_dd = function()\r","\t\t{\r","\t\t\tcreateVbox('box_controls_exists', 'Controls exist');\r","\r","\t\t\tvar control\t= paneUI.create('caption',\t{label:\t'ControlsExistsTest'});\r","\t\t\t\r","\t\t\t//console.log( control );\r","\t\t\tpaneUI.append( '#this.should_not_exists_parent_dd',\tcontrol );\r","\t\t\tpaneUI.append( '#box_controls_exists',\tcontrol );\r","\t\t};\r","\t\t/*---------------------------------------\r","\t\t\tVALUES TESTS\r","\t\t-----------------------------------------\r","\t\t*/\r","\t\t/** Get values\r","\t\t */\r","\t\tthis.getValuesFromDocumentTest_ValuesTest_dd = function()\r","\t\t{\r","\t\t\tconsole.log( paneUI.values() );\t\r","\t\t};\r","\t\t/** Get values\r","\t\t */\r","\t\tthis.getValuesFromControlTest_ValuesTest_dd = function()\r","\t\t{\r","\t\t\tconsole.log( paneUI.value( '#checkbox_1' ) );\t\r","\t\t};\r","\t\t/** Get values\r","\t\t */\r","\t\tthis.getValuesFromMainElementTest_ValuesTest_dd = function()\r","\t\t{\r","\t\t\tconsole.log( paneUI.values( main_element ) );\t\r","\t\t}; \r","\t\t/** Get prefs values\r","\t\t */\r","\t\tthis.getPrefsValuesFromMainElementTest_ValuesTest_dd = function()\r","\t\t{\r","\t\t\t//console.log('getPrefsValuesTest'); \r","\t\t\tconsole.log( paneUI.values( main_element, 'only-prefs' ) );\r","\t\t};\r","\r","\t\t/*---------------------------------------\r","\t\t\tPREFS TESTS\r","\t\t-----------------------------------------\r","\t\t*/\r","\t\t/** PrefsTest_SavePrefs\r","\t\t */\r","\t\tthis.SavePrefs_PrefsTest_dd = function()\r","\t\t{\r","\t\t\tvar values\t= paneUI.values( main_element, 'only-prefs' );\r","\t\t\tconsole.log( values );\r","\t\t\tprefs.set(values);\r","\t\t}; \r","\t\t/** PrefsTest_SavePrefs\r","\t\t */\r","\t\tthis.LoadPrefs_PrefsTest_dd = function()\r","\t\t{\r","\t\t\t//console.log('PrefsTest_btn()'); \r","\t\t\tvar values\t= prefs.get();\r","\t\t\tconsole.log( values );\r","\t\t\tpaneUI.values( values );\r","\t\t}; \r","\r","\t\t/*---------------------------------------\r","\t\t\tPREPARE TEST CLASS AND PANE UI\r","\t\t-----------------------------------------\r","\t\t*/\r","\t\t/** Pane ui\r","\t\t * @return\tobject\tUI class in pane\r","\t\t */\r","\t\tvar setPaneUI = function(_document)\r","\t\t{\r","\t\t\tconsole.log('UITest.setPaneUI()' + _document.location.href); \r","\t\t\tpaneUI = new ko.extensions.TemplateExtension.Komodo.UI().document(_document);\r","\t\t\t\r","\t\t\treturn paneUI;\r","\t\t};\r","\t\t/** Clear pane\r","\t\t */\r","\t\tvar initControlTestBox = function()\r","\t\t{\r","\t\t\tcontrols_box = main_element + ' #' + controls_box_id;\r","\t\t\tconsole.log(  'initControlTestBox: ' + controls_box );\r","\t\t\t\r","\t\t\tpaneUI.$( controls_box  ).delete();\r","\t\t\t\r","\t\t\tif( ! paneUI.exists(controls_box) )\r","\t\t\t\tpaneUI.append( main_element,\r","\t\t\t\t\tpaneUI.create('hbox', {id: controls_box_id, style:\"padding:5px; border: 1px solid lightblue\" })\r","\t\t\t\t);\r","\t\t\t\t\r","\t\t\t//paneUI.$( controls_box  ).empty();\r","\t\t}; \r","\r","\t\t/** Create vbox\r","\t\t */\r","\t\tvar createVbox = function(id, caption=null, attributes={})\r","\t\t{\r","\r","\t\t\tvar selector\t= '#'+id;\r","\t\t\t\r","\t\t\tattributes.id\t= id;\r","\t\t\tattributes.style\t= \"padding:5px\";\r","\t\t\t\r","\t\t\tif( paneUI.exists(selector) )\r","\t\t\t\tpaneUI.$(selector).empty();\r","\t\t\t\r","\t\t\telse\r","\t\t\t\tpaneUI.append( controls_box,\r","\t\t\t\t\tpaneUI.create('vbox', attributes )\r","\t\t\t\t);\r","\t\t\t\r","\t\t\tif( caption )\r","\t\t\t\tpaneUI.append( selector,\r","\t\t\t\t\tpaneUI.create( 'caption', caption )\r","\t\t\t\t);\r","\t\t}; \r","\t\t/**  Loop this object and get functions wich has format of name: 'UiBoxName_ButtonName'\r","\t\t */\r","\t\tvar AddUiTestButtons = function()\r","\t\t{\r","\t\t\tvar controls\t= {button:[], dropdown:[]};\r","\r","\t\t\tfor(var method_name in self)\r","\t\t\t\tif (self.hasOwnProperty(method_name) && typeof self[method_name] === 'function' && method_name.match(/_/gi)  )\r","\t\t\t\t{\r","\t\t\t\t\tvar control_type\t= /_(btn|dd)/gi.exec(method_name).pop() === 'dd' ? 'dropdown' : 'button';\r","\t\t\t\t\tvar method_name_split\t= method_name.replace(/^test|test$/gi, '').replace(/(\\w)([A-Z])/g, '$1 $2').split('_');\r","\t\t\t\t\tvar method_prefix\t= method_name_split[1].trim();\r","\t\t\t\t\tvar attributes\t= {label: method_name_split[0].trim(), oncommand: 'UITest().'+method_name+'()', tooltip: 'UITest.'+method_name+'()'};\r","\t\t\t\t\t\r","\t\t\t\t\t\r","\t\t\t\t\tif( ! controls[control_type][method_prefix] )\r","\t\t\t\t\t\tcontrols[control_type][method_prefix] = [];\r","\t\t\t\t\t\r","\t\t\t\t\tcontrols[control_type][method_prefix].push(attributes);\r","\t\t\t\t\t\r","\t\t\t\t}\r","\t\t\t/** Add btunttons\r","\t\t\t */\r","\t\t\tvar addBtunttons = (function()\r","\t\t\t{\r","\r","\t\t\t\tfor(var control_box_label in controls.button)\r","\t\t\t\t\tif (controls.button.hasOwnProperty(control_box_label))\r","\t\t\t\t\t{\r","\t\t\t\t\t\tvar control_box\t= control_box_label.replace(/\\s/g, '_').toLowerCase();\r","\t\t\t\t\t\t\r","\t\t\t\t\t\tcreateVbox( control_box, control_box_label );\r","\t\t\t\t\t\t\r","\t\t\t\t\t\tpaneUI.append( '#'+control_box,\r","\t\t\t\t\t\t\tpaneUI.create( 'button', controls.button[control_box_label] )\r","\t\t\t\t\t\t);\r","\t\t\t\t\t}\r","\t\t\t\t\t\t\r","\t\t\t})(); \r","\t\t\t\r","\t\t\t/** Add dropdowns\r","\t\t\t */\r","\t\t\tvar addDropdowns = (function()\r","\t\t\t{\r","\t\t\t\tcreateVbox( 'ui_test_methods', 'UITest methods' );\r","\r","\t\t\t\tfor(var dropdown in controls.dropdown)\r","\t\t\t\t\tif (controls.dropdown.hasOwnProperty(dropdown))\r","\t\t\t\t\t\tpaneUI.append( '#ui_test_methods',\r","\t\t\t\t\t\t\tpaneUI.dropdown( dropdown, controls.dropdown[dropdown], dropdown )\r","\t\t\t\t\t\t);\r","\t\t\t})(); \r","\t\t};\r","\r","\t\t/** Remove controls\r","\t\t *  MUST BE EXECUTED BEFORE TEST\r","\t\t */\r","\t\tvar removeControls = function()\r","\t\t{\r","\t\t\tpaneUI.$( '#extension_test_controls' ).empty();\r","\t\t\tpaneUI.$( '#ui_test_controls' ).empty();\t\t\t\r","\t\t};\r","\t\t\r","\t\t/** Find page element or first box|hbox|vbox in preferences window\r","\t\t */\r","\t\tvar getMainElementId = function(element)\r","\t\t{\r","\t\t\tvar _document\t= element.ownerDocument;\r","\t\t\t\r","\t\t\tif( element.parentNode.hasAttribute('id') )\r","\t\t\t\treturn '#'+ element.parentNode.getAttribute('id');\r","\t\t\t\r","\t\t\t/** Find page or window in document \r","\t\t\t */\r","\t\t\tvar page_or_window = (function()\r","\t\t\t{\r","\t\t\t\tfor(let i=0; i<_document.childNodes.length;i++)\r","\t\t\t\t\tif( _document.childNodes[i].nodeName.match(/window|page/gi)  )\r","\t\t\t\t\t\treturn _document.childNodes[i];\r","\t\t\t})(); \r","\t\t\t/** Find main box\r","\t\t\t * If not exits, then create \r","\t\t\t */\r","\t\t\tvar findMainBoxId = function()\r","\t\t\t{\r","\t\t\t\tfor(let i=0; i<page_or_window.childNodes.length;i++)\r","\t\t\t\t\tif( page_or_window.childNodes[i].nodeName.match(/.box/gi) && page_or_window.childNodes[i].hasAttribute('id') )\r","\t\t\t\t\t\treturn page_or_window.childNodes[i].getAttribute('id');\r","\t\t\t\t\t\r","\t\t\t\t/* Create box if not found */\r","\t\t\t\tvar vbox\t= _document.createElement(\"vbox\");\r","\t\t\t\tvbox.setAttribute(\"id\", \"UITest-preference\");\r","\t\t\t\tpage_or_window.appendChild( vbox );\r","\t\t\t\treturn 'UITest-preference';\r","\t\t\t}; \r","\t\t\t\r","\t\t\treturn '#'+( page_or_window.nodeName==='page' ? page_or_window.getAttribute('id') : findMainBoxId() );\r","\t\t};\r","\t\t\r","\t\t/** init UITest controls with button\r","\t\t *\r","\t\t * @example markup in pane.xul or preferences.xul\r","\t\t * \r","\t\t * \t<vbox id=\"UiTest-pane\"><!-- UiTest wrapper with id attribute - Not required, but bettwer if exists -->\r","\t\t * \t\t<button \r","\t\t * \t\t\tlabel=\"UITest.ini()\"\r","\t\t * \t\t\tstyle=\"border:1px solid lightblue\"\r","\t\t * \t\t\toncommand=\"ko.windowManager.getMainWindow().ko.extensions.TemplateExtension.UITest.init(this);\"/>\r","\t\t * \t</vbox>\r","\t\t *\r","\t\t */\r","\t\tthis.init = function(init_button)\r","\t\t{\r","\t\t\tmain_element = getMainElementId(init_button);\r","\r","\t\t\tsetPaneUI(init_button.ownerDocument);\r","\t\t\t\r","\t\t\tpaneUI.delete(init_button);\r","\r","\t\t\tinitControlTestBox();\r","\t\t\t\r","\t\t\tthis.ClearConsole_UiTest_btn();\r","\r","\t\t\tAddUiTestButtons();\r","\t\t\t\r","\t\t\t/* INIT TESTS */\r","\t\t\tthis.AddMainControls_ControlTest_dd();\r","\t\t\tthis.CreateControlset_ControlTest_dd();\r","\t\t};\r","\t\t/** test\r","\t\t */\r","\t\tthis.test = function()\r","\t\t{\r","\t\t\talert( 'UITest.test()' );\r","\t\t}; \r","\t\t\r","\t}\r","\treturn UITest;\r","\r","})().apply(ko.extensions.TemplateExtension.UITest);\r","\r","/** Acces to class from UI \r"," *\t\r"," */\r","function UITest()\r","{\r","\treturn ko.windowManager.getMainWindow().ko.extensions.TemplateExtension.UITest;\r","}"],"version":"1.0.12","rank":100,"async":false,"type":"macro","trigger":"trigger_postopen"}