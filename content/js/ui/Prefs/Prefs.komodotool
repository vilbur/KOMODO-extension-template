{"keyboard_shortcut":"","name":"Prefs","language":"JavaScript","trigger_enabled":false,"value":["if( typeof window.Prefs === 'undefined'  )\r","\twindow.Prefs = {};\r","\t\t\r","/** Prefs\r","*/\r","var Prefs = (function()\r","{\r","\tfunction Prefs()\r","\t{ \r","\t\t//var prefs\t= require(\"ko/prefs\");\r","\t\tvar prefs\t= ko.prefs;\t\t\r","\t\tvar pref_types\t= ['String', 'Long', 'Boolean'];\r","\t\tthis.UI = {};\r"," \r","\t\t/** init\r","\t\t */\r","\t\tthis.init = function()\r","\t\t{\r","\t\t\t//alert( 'Prefs:' );  \r","\t\t\t//console.log( window );\r","\t\t\t//console.log( window.frameElement.contentWindow.document );\t\t\t\r","\r","\t\t\tthis.UI  = komodoWindow().ko.extensions.TemplateExtension._new('UI').document(window.frameElement.contentWindow.document);\r","\t\t\tthis.UI.test();\r","\t\t}; \r","\t\t\r","\t\t/** test\r","\t\t */ \r","\t\tthis.test = function()\r","\t\t{\r","\t\t\t//alert( 'Prefs.test()' );\r","\t\t\t//this.UI.parent('#te_pref_box').append( 'checkbox', ['Checkbox B 1', 'Checkbox B 2'] );\r","\r","\t\t};\r","\t\t/** Get Komodo main window \r","\t\t * chrome://komodo/content/library/windowManager.js mus be imported in preferences.xul\r","\t\t *\r","\t\t * @return object komodo main window\r","\t\t */\r","\t\tvar komodoWindow = function()\r","\t\t{\r","\t\t\treturn ko.windowManager.getMainWindow();\r","\t\t}; \r","\r","\t\t/**  \r","\t\t */\r","\t\tthis.setPrefs = (function(key, value)\r","\t\t{\r","\t\t\tvar type = typeof value;\r","\t\t\t\r","\t\t\t if ( type===\"number\" || /^\\d+(\\.\\d+)?$/.match(value) )\r","\t\t\t\tprefs.setLong( key,\tNumber(value));\r","\t\t\r","\t\t\telse if ( type==\"boolean\")\r","\t\t\t\tprefs.setBoolean( key,\tvalue );\r","\t\t\t\r","\t\t\telse\r","\t\t\t\tprefs.setString( key,\tvalue);\r","\t\t\t\r","\t\t});\r","\t\t/**  \r","\t\t */\r","\t\tthis.getPrefs = (function(key, value_default)\r","\t\t{\r","\t\t\t\r","\t\t\tthis.getString = function()\r","\t\t\t{\r","\t\t\t\treturn prefs.getString(key);\r","\t\t\t}; \r","\t\t\tthis.getLong = function()\r","\t\t\t{\r","\t\t\t\treturn prefs.getLong(key);\r","\t\t\t}; \r","\t\t\tthis.getBoolean = function()\r","\t\t\t{\r","\t\t\t\treturn prefs.getBoolean(key);\r","\t\t\t};\r","\t\t\t\r","\t\t\treturn function()\r","\t\t\t{\r","\t\t\t\tfor(let i=0; i<pref_types.length;i++)\r","\t\t\t\t{\r","\t\t\t\t\tvar value\t= this['get'+pref_types[i]];\r","\t\t\t\t\tif(typeof value !== 'undefined')\r","\t\t\t\t\t\treturn value;\r","\t\t\t\t}\r","\t\t\t\treturn value_default;\r","\t\t\t}; \r","\t\t\r","\t\t});\r","\t\t\r","\t}\r","\treturn Prefs;\r","\r","})();\r","\t\r","Prefs.apply(window.Prefs);\r","\r","function onloadTest(){\r","\t\r","\talert( 'onloadTest' );\r","\t//Prefs.apply(window.Prefs);\r","\t//window.Prefs.init();\r","}\r","\r",""],"version":"1.0.12","rank":100,"async":false,"type":"macro","trigger":"trigger_postopen"}