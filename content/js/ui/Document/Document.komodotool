{
  "keyboard_shortcut": "", 
  "name": "Document", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "if( typeof ko.extensions.TemplateExtension === 'undefined'  )", 
    "\tko.extensions.TemplateExtension = {};", 
    "", 
    "/** Get extension`s window.document", 
    " * Allow access to extenion`s window from *.komodotool scripts, for example for testing", 
    " * ", 
    " */", 
    "ko.extensions.TemplateExtension.Document = {};", 
    "(function()", 
    "{", 
    "\tfunction Document()", 
    "\t{", 
    "\t\tvar host_name\t= 'TemplateExtension';", 
    "\t\t", 
    "\t\t/** Get window.document of extension", 
    "\t\t * ", 
    "\t\t * @example  get('preferences') return document of preferences.xul", 
    "\t\t * ", 
    "\t\t * @param\tstring\tfilename\tBasename of *.xul file", 
    "\t\t * @return\tobject\tdocument", 
    "\t\t */", 
    "\t\tthis.get = function(filename)", 
    "\t\t{", 
    "\t\t\tvar windows\t= require(\"ko/windows\").getAll();", 
    "\t\t\tvar rx_host_name\t= new RegExp( host_name, 'gi');", 
    "\t\t\tvar rx_filename\t= new RegExp( filename + '.xul$', 'gi');\t\t\t", 
    "\t\t\t", 
    "\t\t\tfor(let w=0; w<windows.length;w++)", 
    "\t\t\t{", 
    "\t\t\t\tvar window_frame\t= windows[w].frameElement;", 
    "\t\t\t\tvar window_location\t= window_frame ? window_frame.contentWindow.document.location : null;", 
    "\t\t\t\t", 
    "\t\t\t\tif( window_frame && window_location.host.match(rx_host_name) && window_location.pathname.match( rx_filename ) )", 
    "\t\t\t\t\treturn  windows[w].frameElement.contentWindow.document;\t\t", 
    "\t\t\t}", 
    "\t\t};", 
    "\t\t/** test", 
    "\t\t */", 
    "\t\tthis.test = function()", 
    "\t\t{", 
    "\t\t\talert( 'TemplateExtension.Document.test()' ); ", 
    "\t\t}; ", 
    "\t}", 
    "\treturn Document;", 
    "", 
    "})().apply(ko.extensions.TemplateExtension.Document);"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}